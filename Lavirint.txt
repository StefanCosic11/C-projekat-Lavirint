#define _CRT_SECURE_NO_WARNINGS

#include <iostream> // input/ output stream
#include<fstream>
#include <string>
#include<Windows.h> 
#include<conio.h> // console input/output
#include<stdlib.h>
#include<time.h>
#include<cstdlib>
#include<ctype.h>
#define IMEDAT "rezultati.txt"

using namespace std;
using std::string;

// deklaracije funkcija
void welcome();   
void begin();
void signUp();
char getKeyPress();
char menu();
void printLevel(int);
void setMe(int);
bool isExit(int, int, int);
bool isWall(int, int, int);
int gety(int, int&);
int getX(int, int &);
void update(int, int, int);
void makeSpace(int, int, int);
void instructions();
void impressions();
//funkcije vezane za datoteku:
ofstream fout;
ifstream fin;
void writeF(); 
void readF();
// deklaracije globalnih promenljivih 
int score;

 struct igrac { // struktura igrac koja sadrzi ime koje ce igrac upisivati i rezultat koji je ostvario.
	char ime[31];
	int score1=0, score2=0, score3=0;
} s;

const char space = ' ';
const char me = char(157); //Asccii kod za igraca 
char lvl1[21][21] = { // matrica za 1. nivo lavirinta
'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',
'X', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',
'#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#',
'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#',
'#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#',
'#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#',
'#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#',
'#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
'#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#',
'#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',
'#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#',
'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
'#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#',
'#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#',
'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#',
'#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#',
'#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#',
'#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#',
'#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', 'O',
'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' };

char lvl2[31][31] = { // matrica za 2. nivo lavirinta
	'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',
	'X', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#',
	'#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#',
	'#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#',
	'#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#',
	'#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#',
	'#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#',
	'#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
	'#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#',
	'#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#',
	'#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#',
	'#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#',
	'#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', 'O',
	'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' };

char lvl3[41][41] = { // matrica za 3. nivo lavirinta
	'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',
	'X', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#',
	'#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#',
	'#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#',
	'#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#',
	'#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#',
	'#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#',
	'#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#',
	'#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', ' ', '#',
	'#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',
	'#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#',
	'#', '#', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#',
	'#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', 'O',
	'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' };


int main(void) { ///////////////////////////////////////////////////////////////// GLAVNA FUNKCIJA

				 // MENJANJE BOJE TEKSTA IZ WINDOWS.H BIBLIOTEKE || izvor youtube NVitanovic, C++ Tutorial 5 - For loops and how to change text color
	HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(h, FOREGROUND_GREEN);

	welcome();

	do { // while petlja koja od unosa slova nas salje na izbor nivoa, instrukcije, rezultat ili izlaz 
		char choice;
		int error = 0;

		choice = menu();

		if (choice == 'p' || choice == 'P') {
			signUp();
			begin();
		}
		else if (choice == 'k' || choice == 'K') {

			instructions();
			system("pause");
		}
		else if (choice == 's' || choice == 'S') {
			readF();

		}
		else if (choice == 'i' || choice == 'I') {
			impressions();

		}
		else if (choice == 'q' || choice == 'Q')
		{
			system("cls");
			cout << "Hvala sto ste igrali! Zdravo!";
			Sleep(2000);
			exit(1);
		}
		else
		{
			cout << "\n\n\n\n\n\n\n \t\t\t\t\tNiste uneli odgovarajucu komandu!";
		}
	} while (1);
	///////////////////////// Kraj IZBORA
	

	return 0;
} /////////////////////////////////////////////////////////////////  KRAJ   GLAVNE FUNKCIJE

void welcome() { //funkcija koja ispisuje uvodni tekst 



	cout << "\n\t\t\t\t\t\t Stefan Cosic NRT 127/15\n\n";
	cout << "\n\n\n\n========================================================================================================================";
	string start = "\t\tDobrodosli u Lavirint";
	string indev = "\t\t\t\tIzaberite jedan od tri nivoa i probajte da nadjete izlaz";
	string howto = "\t\t\t\tNadam se da cete uzivati u igri, zapamtite, nece biti lako !";
	cout << endl;

	cout << "\n\n\n    \t\t\t";
	for (auto ch : start) {
		cout << ch;
		Sleep(40);
	} cout << endl << endl;
	cout << "    \t   ";


	for (auto ch : indev) {
		cout << ch;
		Sleep(40);
	} cout << endl << endl << endl;
	cout << "\t";
	for (auto ch : howto) {
		cout << ch;
		Sleep(40);
	}
	cout << "\n\n\n\n========================================================================================================================";

	Sleep(2000);

}
// Menu funkcija u kojoj se bira sta zelimo da radimo
char menu()
{
	system("cls");
	char choice;

	cout << "\n\n\n\n\n\n\n========================================================================================================================";
	cout << "\n\n\n\n\n\n\t\t\t\t\t\t\t Meni";
	cout << "\n\n\n\t\t\t\t\t\tZapocnite igru  (P)";
	cout << "\n\t\t\t\t\t\tInstrukcije \t(K) ";
	cout << "\n\t\t\t\t\t\tRezultat \t(S)";
	cout << "\n\t\t\t\t\t\tUtisci \t\t(I)";
	cout << "\n\t\t\t\t\t\tIzlaz \t\t(Q)";
	cout << "\n\n\n\n\n\n\n========================================================================================================================";

	cin >> choice;
	cin.ignore();
	return choice;
};

void instructions() { // funkcija koja ispisuje instrukcije o igri
	system("cls");
	cout << "\n\n\n\n\n\n\n========================================================================================================================";
	cout << "\n\n\n\t\t\t\t\t\t\tInstrukcije:";
	cout << "\n\n\n\t     Pomerate igraca " << char(157) << " pomocu strelica" << endl;
	cout << "\n\t     <-levo, >-desno, ^-gore, v-dole ";
	cout << "\n\n\t     Cilj je da igraca izvedete iz lavirinta , a izlaz je oznacen simbolom 'O'";
	cout << "\n\n\t     Sto manje pokreta napravite, to je bolje, odnosno manji rezultat oznacava koliko ste efikasni.";
	cout << "\n\n\t     Svaki udarac u zid, iako se ne pomerite se racuna kao pomeraj, tako da budite pazljivi! Srecno!";
	cout << "\n\n\n========================================================================================================================";
};

void signUp() {
	system("cls");
	cout << "\n\n\n\n\n\n\n";
	cout << "\n\n\n\t\t\t\t\t\t\tUpisite svoje ime:";
	cin.getline (s.ime,31);
	
	
};

void begin() { // funkcija koja sluzi za odabir nivoa, kao i provere da li ste udarili u zid ili ste izasli iz lavirinta
	system("CLS");
	cout << "\n\n\n\n\n\n\n========================================================================================================================";
	cout << "\n\n\n\n\n\n\n\n\n    \t\t\t\t\t\t";
	cout << "IZABERITE NIVO KOJI ZELITE: \n\n    \t\t\t\t\t\t\t1---2---3\n    \t\t\t";
	cout << "\n\n========================================================================================================================";


	int lvl;
	cin >> lvl;

	system("CLS");
	setMe(lvl);
	printLevel(lvl);
	int x, y;

	while (1) {

		char move = getKeyPress();

		switch (move) {

		case 'u':
			x = gety(lvl, y);
			if (!isWall(x - 1, y, lvl)) {
				if (isExit(x - 1, y, lvl)) {
					system("CLS");
					cout << "\n\n\n\n\n\n\n \t\t\t\t\t Cestitam, izasli ste iz lavirinta!" << endl;
					Sleep(3000);
					begin();
				}
				system("CLS");
				makeSpace(lvl, x, y);
				update(lvl, x - 1, y);
			}
			break;
		case 'd':
			x = gety(lvl, y);
			if (!isWall(x + 1, y, lvl)) {
				if (isExit(x + 1, y, lvl)) {
					system("CLS");
					cout << "\n\n\n\n\n\n\n \t\t\t\t\t Cestitam, izasli ste iz lavirinta!" << endl;
					Sleep(3000);
					begin();
				}
				system("CLS");
				makeSpace(lvl, x, y);
				update(lvl, x + 1, y);
			}
			break;
		case 'l':
			x = gety(lvl, y);
			if (!isWall(x, y - 1, lvl)) {
				if (isExit(x, y - 1, lvl)) {
					system("CLS");
					cout << "\n\n\n\n\n\n\n \t\t\t\t\t Cestitam, izasli ste iz lavirinta!" << endl;
					Sleep(3000);
					begin();
				}
				system("CLS");
				makeSpace(lvl, x, y);
				update(lvl, x, y - 1);
			}
			break;
		case 'r':
			x = gety(lvl, y);
			if (!isWall(x, y + 1, lvl)) {
				if (isExit(x, y + 1, lvl)) {
					system("CLS");
					cout << "\n\n\n\n\n\n\n \t\t\t\t\t Cestitam, izasli ste iz lavirinta!" << endl;
					Sleep(3000);
					begin();
				}
				system("CLS");
				makeSpace(lvl, x, y);
				update(lvl, x, y + 1);
			}
			break;
		case 'q':
		case 'Q': {

			cout << "\nDa li zelite da napustite igru? Y/N ";
			move = getKeyPress();

			if (move == 'y' || move == 'Y')
			{
				exit(1);
			}
			else
			{
				// remove message
				system("CLS");
				printLevel(lvl);
			}
			continue;
		}  ////////////////////////////////////////////
		default:
			break;
		}

	}

};


void printLevel(int lvl) { // funkcija koja stampa matricu
	int i, j;

	cout << " \n" << "Rezultat : " << score;
	if (lvl == 1) {  //  matrica za lvl1
		for (i = 0; i != 21; ++i) {
			cout << endl << "\t\t\t\t\t\t";
			for (j = 0; j != 21; ++j) {
				cout << lvl1[i][j];
			}
		} cout << endl;

	}
	if (lvl == 2) {   //  matrica za lvl2
		cout << " \n";

		for (i = 0; i != 31; ++i) {
			cout << endl << "\t\t\t\t\t\t";
			for (j = 0; j != 31; ++j) {
				cout << lvl2[i][j];
			}
		} cout << endl;
	}
	if (lvl == 3) {   //  matrica za lvl3	
		for (i = 0; i != 41; ++i) {
			cout << endl << "\t\t\t\t\t\t";
			for (j = 0; j != 41; ++j) {
				cout << lvl3[i][j];
			}
		} cout << endl;
	}
}



void setMe(int lvl) { // funkcija koja dodeljuje vrednosti x i y iz matrice za odredjeni nivo
	int x, y;
	if (lvl == 1) {
		x = getX(lvl, y);
		lvl1[x][y] = me;
	}
	if (lvl == 2) {
		x = getX(lvl, y);
		lvl2[x][y] = me;
	}
	if (lvl == 3) {
		x = getX(lvl, y);
		lvl3[x][y] = me;
	}
}
//Ovo sam nasao na CPP forumu prosle godine kad smo radili prethodni projekat, pa sam iskoristio.
char getKeyPress() { //dodela vrednosti  i povecavanje rezultata svakim klikom

	char key = 127;

	key = _getch();

	if (key == 0 || key == -32) {

		key = _getch();

		if (key == 72) {
			key = 'u';
			score += 1;
		}
		else if (key == 75) {
			key = 'l';
			score += 1;
		}
		else if (key == 77) {
			key = 'r';
			score += 1;
		}
		else if (key == 80) {
			key = 'd';
			score += 1;
		}
		else if (key == 81) {
			key = 'Q';
		}
		else if (key == 113) {
			key = 'q';
		}
		else if (key == 121) {
			key = 'y';
		}
	}
	return key;
}

bool isExit(int x, int y, int lvl) { // preispitivanje da li smo izasli iz lavirinta
	if (lvl == 1) {
		if (lvl1[x][y] == 'O') {
			s.score1 = score; // dodela trenutnog rezultata rezultatu 1 u strukturi
			writeF();
			return true;
		}
		else {
			return false;
		}
	}
	if (lvl == 2) {
		if (lvl2[x][y] == 'O') {
			s.score2 = score; // dodela trenutnog rezultata rezultatu 2 u strukturi
			writeF();
			return true;
		}
		else {
			return false;
		}
	}
	if (lvl == 3) {
		if (lvl3[x][y] == 'O') {
			s.score3 = score; // dodela trenutnog rezultata rezultatu 3 u strukturi 
			writeF();
			return true;
		}
		else {
			return false;
		}
	}
	return true;
}

bool isWall(int x, int y, int lvl) { ///// funkcija za nailazak na zid
	if (lvl == 1) {
		if (lvl1[x][y] == '#') {
			cout << "\n\t\t\t\t\tNaisli ste na zid!";
			Sleep(400);
			system("CLS");
			printLevel(lvl);
			return true;
		}
		else {
			return false;
		}
	}
	if (lvl == 2) {
		if (lvl2[x][y] == '#') {
			cout << "\n\t\t\t\t\tNaisli ste na zid!";
			Sleep(400);
			system("CLS");
			printLevel(lvl);
			return true;
		}
		else {
			return false;
		}
	}
	if (lvl == 3) {
		if (lvl3[x][y] == '#') {
			cout << "\n\t\t\t\t\tNaisli ste na zid!";
			Sleep(400);
			system("CLS");
			printLevel(lvl);
			return true;
		}
		else {
			return false;
		}
	}
	return true;
}

int getX(int lvl, int &y) {      // funkcija za odredjivanje x koordinate prolaskom kroz matricu
	int xCoord, i, j;
	if (lvl == 1) {
		for (i = 0; i != 21; ++i) {
			for (j = 0; j != 21; ++j) {
				if (lvl1[i][j] == 'X') {
					xCoord = i;
					y = j;
					return xCoord;
				}
			}
		}
	}
	if (lvl == 2) {
		for (i = 0; i != 31; ++i) {
			for (j = 0; j != 31; ++j) {
				if (lvl2[i][j] == 'X') {
					xCoord = i;
					y = j;
					return xCoord;
				}
			}
		}
	}
	if (lvl == 3) {
		for (i = 0; i != 41; ++i) {
			for (j = 0; j != 41; ++j) {
				if (lvl3[i][j] == 'X') {
					xCoord = i;
					y = j;
					return xCoord;
				}
			}
		}
	}
	return 0;
}

int gety(int lvl, int &y) {  // Odredjivanje y koordinate prolaskom kroz matricu
	int xCoord, i, j;
	if (lvl == 1) {
		for (i = 0; i != 21; ++i) {
			for (j = 0; j != 21; ++j) {
				if (lvl1[i][j] == char(157)) {
					xCoord = i;
					y = j;
					return xCoord;
				}
			}
		}
	}
	if (lvl == 2) {
		for (i = 0; i != 31; ++i) {
			for (j = 0; j != 31; ++j) {
				if (lvl2[i][j] == char(157)) {
					xCoord = i;
					y = j;
					return xCoord;
				}
			}
		}
	}
	if (lvl == 3) {
		for (i = 0; i != 41; ++i) {
			for (j = 0; j != 41; ++j) {
				if (lvl3[i][j] == char(157)) {
					xCoord = i;
					y = j;
					return xCoord;
				}
			}
		}
	}
	return 0;
}


void update(int lvl, int x, int y) { // funkcija koja postavlja poziciju igraca u odredjenom nivou
	if (lvl == 1) {
		lvl1[x][y] = me;
		printLevel(lvl);
	}
	if (lvl == 2) {
		lvl2[x][y] = me;
		printLevel(lvl);
	}
	if (lvl == 3) {
		lvl3[x][y] = me;
		printLevel(lvl);
	}
}

void makeSpace(int lvl, int x, int y) { // funkcija koja prikuplja pozicije i postavlja karakter ' ' gde je igrac prethodno bio
	if (lvl == 1) {
		lvl1[x][y] = space;
	}
	if (lvl == 2) {
		lvl2[x][y] = space;
	}
	if (lvl == 3) {
		lvl3[x][y] = space;
	}
}


void writeF() { // funkcija koja vrsi upis podataka iz strukture igrac u datoteku rezultati.txt 
	

	fout.open(IMEDAT, ios::out | ios::app); // otvaranje datoteke za upis iz strukture , sa opcijom nastavka na vec postojeci sadrzaj
	if (!fout) {
		cerr << "Greska pri otvaranju datoteke" << endl; // provera ima li greske prilikom otvaranja datoteke
		exit(1);
	}
	fout<< "# " << s.ime << "  lvl1 pomeraji: " << s.score1 << " lvl2 pomeraji: " << s.score2 << "  lvl3 pomeraji: "<< s.score3 << endl;

	fout.close();
};


void readF() {  //funkcija koja vrsi citanje rezultata iz datoteke i ispisuje ih na ekran
	string line;
	system("cls");

	cout << "\n\n\n\n\n\n\n========================================================================================================================";
	cout << "\n\n\n\t\t\t\t\t\t\tRezultati:"<<endl<<endl;
	fin.open(IMEDAT, ios::in);
	if (!fin) {                                          // provera ima li greske prilikom otvaranja datoteke
		cerr << "Greska pri otvaranju datoteke" << endl;
		exit(1);
	}
	
	while (getline(fin, line))
	{
		cout << line << '\n';
	}

	cout << "\n\n\n\n\n\n\n========================================================================================================================";
	fin.close();
	system("pause");
};
// dinamicka dodela memorije
void impressions() {
	system("cls");
	int duzina = 200;
	char* utisak = new char[duzina];
	fout.open("utisci.txt", ios::out | ios::app);
	if (!fout) {
		cerr << "Greska pri otvaranju datoteke" << endl;
		exit(1);
	}
	cout << "\n\n\n\t\tSvidela Vam se igra? Ispisite nam Vase iskustvo.." << endl;
	cin.getline(utisak, duzina);

	fout << "- ";
	fout << utisak;
	fout << "\n";
	fout.close();
	delete utisak;
	cout << "\n\n\n\t\t\t\tHvala Vam na iznetim sugestijama, pohvalama i kritikama! " << endl<< endl<< endl;
	
	system("pause");
}